{"ast":null,"code":"import { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport rootReducer from \"./reducers\";\n\nvar makeConfiguredStore = function makeConfiguredStore(reducer, initialState) {\n  return createStore(reducer, initialState, composeWithDevTools(applyMiddleware(thunk)));\n};\n\nexport var makeStore = function makeStore(initialState, _ref) {\n  var isServer = _ref.isServer,\n      req = _ref.req,\n      debug = _ref.debug,\n      storeKey = _ref.storeKey;\n\n  if (isServer) {\n    initialState = initialState || {\n      fromServer: \"foo\"\n    };\n    return makeConfiguredStore(rootReducer, initialState);\n  } else {\n    var persistConfig = {\n      key: \"nextjs\",\n      whitelist: [\"cart\"],\n      storage: storage\n    };\n    var persistedReducer = persistReducer(persistConfig, rootReducer);\n    var store = makeConfiguredStore(persistedReducer, initialState);\n    store.__persistor = persistStore(store);\n    return store;\n  }\n};","map":{"version":3,"sources":["/Users/roman/Documents/server/next-js-project/client/redux/index.js"],"names":["createStore","applyMiddleware","composeWithDevTools","thunk","persistStore","persistReducer","storage","rootReducer","makeConfiguredStore","reducer","initialState","makeStore","isServer","req","debug","storeKey","fromServer","persistConfig","key","whitelist","persistedReducer","store","__persistor"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,eAA7C;AACA,OAAOC,OAAP,MAAoB,2BAApB;AAEA,OAAOC,WAAP,MAAwB,YAAxB;;AAEA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,OAAD,EAAUC,YAAV;AAAA,SAC1BV,WAAW,CACTS,OADS,EAETC,YAFS,EAGTR,mBAAmB,CAACD,eAAe,CAACE,KAAD,CAAhB,CAHV,CADe;AAAA,CAA5B;;AAOA,OAAO,IAAMQ,SAAS,GAAG,SAAZA,SAAY,CAACD,YAAD,QAAsD;AAAA,MAArCE,QAAqC,QAArCA,QAAqC;AAAA,MAA3BC,GAA2B,QAA3BA,GAA2B;AAAA,MAAtBC,KAAsB,QAAtBA,KAAsB;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAC7E,MAAIH,QAAJ,EAAc;AACZF,IAAAA,YAAY,GAAGA,YAAY,IAAI;AAAEM,MAAAA,UAAU,EAAE;AAAd,KAA/B;AAEA,WAAOR,mBAAmB,CAACD,WAAD,EAAcG,YAAd,CAA1B;AACD,GAJD,MAIO;AACL,QAAMO,aAAa,GAAG;AACpBC,MAAAA,GAAG,EAAE,QADe;AAEpBC,MAAAA,SAAS,EAAE,CAAC,MAAD,CAFS;AAGpBb,MAAAA,OAAO,EAAPA;AAHoB,KAAtB;AAMA,QAAMc,gBAAgB,GAAGf,cAAc,CAACY,aAAD,EAAgBV,WAAhB,CAAvC;AACA,QAAMc,KAAK,GAAGb,mBAAmB,CAACY,gBAAD,EAAmBV,YAAnB,CAAjC;AAEAW,IAAAA,KAAK,CAACC,WAAN,GAAoBlB,YAAY,CAACiB,KAAD,CAAhC;AAEA,WAAOA,KAAP;AACD;AACF,CAnBM","sourcesContent":["import { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\n\nimport rootReducer from \"./reducers\";\n\nconst makeConfiguredStore = (reducer, initialState) =>\n  createStore(\n    reducer,\n    initialState,\n    composeWithDevTools(applyMiddleware(thunk))\n  );\n\nexport const makeStore = (initialState, { isServer, req, debug, storeKey }) => {\n  if (isServer) {\n    initialState = initialState || { fromServer: \"foo\" };\n\n    return makeConfiguredStore(rootReducer, initialState);\n  } else {\n    const persistConfig = {\n      key: \"nextjs\",\n      whitelist: [\"cart\"],\n      storage\n    };\n\n    const persistedReducer = persistReducer(persistConfig, rootReducer);\n    const store = makeConfiguredStore(persistedReducer, initialState);\n\n    store.__persistor = persistStore(store);\n\n    return store;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}