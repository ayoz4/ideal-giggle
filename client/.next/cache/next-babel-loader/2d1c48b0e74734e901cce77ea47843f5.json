{"ast":null,"code":"import { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport rootReducer from \"./reducers\";\n\nconst makeConfiguredStore = (reducer, initialState) => createStore(reducer, initialState, composeWithDevTools(applyMiddleware(thunk)));\n\nexport const makeStore = (initialState, {\n  isServer,\n  req,\n  debug,\n  storeKey\n}) => {\n  if (isServer) {\n    initialState = initialState || {\n      fromServer: \"foo\"\n    };\n    return makeConfiguredStore(rootReducer, initialState);\n  } else {\n    const persistConfig = {\n      key: \"nextjs\",\n      whitelist: [\"cart\"],\n      storage\n    };\n    const persistedReducer = persistReducer(persistConfig, rootReducer);\n    const store = makeConfiguredStore(persistedReducer, initialState);\n    store.__persistor = persistStore(store);\n    return store;\n  }\n};","map":null,"metadata":{},"sourceType":"module"}